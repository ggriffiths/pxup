#- name: update
#  yum:
#    name: '*'
#    state: latest

- name: build hosts file
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_eth1.ipv4.address }} {{item}}" state=present
  when: hostvars[item].ansible_eth1.ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: disable selinux
  selinux: state=disabled

- name: disable of selinux - now
  command: setenforce 0
  ignore_errors: True

- name: Create /etc/pwx
  file: path=/etc/pwx state=directory

- name: Create /var/lib/portworx
  file: path=/var/lib/portworx state=directory

- name: Create /var/lib/osd/driver
  file: path=/var/lib/osd/driver state=directory

- name: Create /minio
  file: path=/minio state=directory

- name: Install px config
  copy: src=config.json owner=root group=root dest=/etc/pwx/config.json force=yes
  when: not oci

- name: Update etcd in px config
  lineinfile: dest=/etc/pwx/config.json regexp="etcd:http://" line="\"etcd:http://{{ hostvars[groups['all'][0]].ansible_eth1.ipv4.address }}:2379\"" state=present
  when: not oci

- name: install utility programs
  yum: name={{ item }} state=present disable_gpg_check=yes
  with_items:
    - wget
    - ntp
    - screen
    - epel-release
    - vim
    - iptables
    - iptables-utils
    - iptables-services
    - ncurses-term
    - etcd
    - kernel-devel
    - kernel-headers

- name: install epel  utility programs
  yum: name={{ item }} state=present disable_gpg_check=yes
  with_items:
    - jq
    - lvm2
    - yum-utils
    - device-mapper-persistent-data

- name: remove all old docker
  yum: name={{ item }} state=removed disable_gpg_check=yes
  with_items:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-engine

- name: install docker ce yum repo
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install docker ce
  yum: name=docker-ce state=present disable_gpg_check=yes

- name: update etcd config
  lineinfile: dest=/etc/etcd/etcd.conf regexp='^ETCD_LISTEN_CLIENT_URLS=' line='ETCD_LISTEN_CLIENT_URLS=http://{{ ansible_eth1.ipv4.address }}:2379,http://127.0.0.1:2379' state=present

- name: enable services
  service: name={{ item }} state=started enabled=yes
  with_items:
    - docker
    - ntpd
    - etcd

- name: copy docker image to host
  copy: src=px.img owner=root group=root dest=/root force=yes 
  when: not pullimage

- name: install image
  shell: docker load < /root/px.img
  when: not pullimage

- name: Pulling pximage
  command: docker pull {{ pximage }}
  when: pullimage

- name: determine if it is running already
  command: docker inspect px-dev
  register: inspect_result
  ignore_errors: True
  when: not oci

- name: stop px-dev
  command: docker stop px-dev
  when: inspect_result is succeeded and not oci

- name: rm px-dev
  command: docker rm px-dev
  when: inspect_result is succeeded and not oci

- name: Installing and starting Px container. This may take a while
  command: docker run --name px-dev -d --net=host --privileged=true -e PORTWORX_AUTH_SYSTEM_KEY=mysecret -e PORTWORX_AUTH_JWT_SHAREDSECRET=mysecret -e PORTWORX_AUTH_JWT_ISSUER=openstorage.io -e PORTWORX_AUTH_USERNAME_CLAIM=email -v /etc/hosts:/etc/hosts:ro -v /etc/resolv.conf:/etc/resolv.conf:ro -v /var/lib/portworx:/var/lib/portworx -v /mnt:/mnt:shared -v /run/docker:/run/docker -v /var/lib/osd:/var/lib/osd:shared -v /dev:/dev -v /etc/pwx:/etc/pwx -v /opt/pwx/bin:/export_bin -v /usr/src:/usr/src -v /lib/modules:/lib/modules -v /run/lvm:/run/lvm -v /var/run/docker.sock:/var/run/docker.sock  -v /var/cores:/var/cores -v /usr/src:/usr/src -v /lib/modules:/lib/modules -v /opt/pwx:/opt/pwx -v /etc/systemd/system:/etc/systemd/system -v /host_proc/1/ns:/host_proc/1/ns {{ pximage }}
  when: not oci

- name: check if px-runc is installed
  stat:
    path: /opt/pwx/bin/px-runc
  register: px_runc_rules

- name: Installing OCI image
  command: docker run --entrypoint /runc-entry-point.sh --rm -i --privileged=true -v /opt/pwx:/opt/pwx -v /etc/pwx:/etc/pwx {{ pximage }} --upgrade
  when: oci

- name: Install px from oci image
  command: /opt/pwx/bin/px-runc  install -c "pxup-cluster" -k etcd:http://{{ hostvars[groups['all'][0]].ansible_eth1.ipv4.address }}:2379 -A {{ oci_switches }}
  when: oci and not auth and not px_runc_rules.stat.exists

- name: Install px from oci image
  command: /opt/pwx/bin/px-runc  install -c "pxup-cluster" -k etcd:http://{{ hostvars[groups['all'][0]].ansible_eth1.ipv4.address }}:2379 -jwt_issuer=openstorage.io -jwt_shared_secret={{ shared_secret }} -auth_system_key=mysecret2 -A {{ oci_switches }}
  when: oci and auth and not px_runc_rules.stat.exists

- name: Systemctl start portworx
  service: name=portworx state=restarted enabled=yes
  when: oci

- name: determine if minio is running already
  command: docker inspect minio
  register: minio_inspect_result
  ignore_errors: True

- name: stop minio
  command: docker stop minio
  when: minio_inspect_result is succeeded

- name: rm minio
  command: docker rm minio
  when: minio_inspect_result is succeeded

- name: Run minio server
  command: docker run --name minio -d -p 7999:9000 -e MINIO_ACCESS_KEY=admin -e MINIO_SECRET_KEY=password -v /minio:/minio minio/minio server /minio

- name: Waiting for system to be online
  wait_for: timeout=600 port=9001

- name: setup trial license
  command: timeout 30 sh -c 'until /opt/pwx/bin/pxctl license act trial > /dev/null 2>&1; do sleep 1 ; done'

- name: login to secret kvdb
  command: /opt/pwx/bin/pxctl secrets kvdb login

